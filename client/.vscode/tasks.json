// Available variables which can be used inside of strings.
// ${workspaceRoot}: the root folder of the team
// ${file}: the current opened file
// ${fileBasename}: the current opened file's basename
// ${fileDirname}: the current opened file's dirname
// ${fileExtname}: the current opened file's extension
// ${cwd}: the current working directory of the spawned process

// A task runner that calls a custom npm script that compiles the extension.
{
	"version": "0.1.0",
	"command": "npm",
	"isShellCommand": true,
  "suppressTaskName": true,
	"showOutput": "silent",
  "tasks": [
    {
      "taskName": "build",
      "args": ["run", "watch"], // , "--loglevel", "silent"
	    "isBackground": true,
      "isBuildCommand": true,
      "isTestCommand": false,
      "problemMatcher": "$tsc-watch"
    }
    //,
    // {
    //   "taskName": "test",
    //   "args": ["test"],
    //   "isBuildCommand": false,
    //   "isTestCommand": true,
    //   "showOutput": "always"
    // },
    // {
    //   "taskName": "test-debug",
    //   "args": ["run", "test-debug"],
    //   "isBuildCommand": false,
    //   "isTestCommand": false,
    //   "showOutput": "always"
    // }
  ]


	// // we run the custom script "compile" as defined in package.json
	// "args": ["run", "watch"],

	// // The tsc compiler is started in watching mode
	// "isWatching": true,

	// // use the standard tsc in watch mode problem matcher to find compile problems in the output.
 	// "problemMatcher": "$tsc-watch"




	// we want to run npm
	// "command": "gulp",


  // "tasks": [
  //   {
  //     "taskName": "default",
  //     "isBuildCommand": true,
  //     "showOutput": "silent",
  //   	"problemMatcher": "$tsc-watch"
  //   }
  // ]
}